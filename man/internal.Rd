% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/undocumented.r
\name{internal}
\alias{internal}
\alias{kdenx}
\alias{pkdenx}
\alias{bckdenxsimple}
\alias{pbckdenxsimple}
\alias{bckdenxcutnorm}
\alias{pbckdenxcutnorm}
\alias{bckdenxrenorm}
\alias{pbckdenxrenorm}
\alias{bckdenxreflect}
\alias{pbckdenxreflect}
\alias{pxb}
\alias{bckdenxbeta1}
\alias{pbckdenxbeta1}
\alias{bckdenxbeta2}
\alias{pbckdenxbeta2}
\alias{bckdenxgamma1}
\alias{pbckdenxgamma1}
\alias{bckdenxgamma2}
\alias{pbckdenxgamma2}
\alias{bckdenxcopula}
\alias{pbckdenxcopula}
\alias{pbckdenxlog}
\alias{pbckdenxnn}
\alias{qmix}
\alias{qmixprime}
\alias{qgbgmix}
\alias{qgbgmixprime}
\alias{pscounts}
\title{Internal Functions}
\usage{
kdenx(x, kerncentres, lambda, kernel = "gaussian")

pkdenx(x, kerncentres, lambda, kernel = "gaussian")

bckdenxsimple(x, kerncentres, lambda, kernel = "gaussian")

pbckdenxsimple(x, kerncentres, lambda, kernel = "gaussian")

bckdenxcutnorm(x, kerncentres, lambda, kernel = "gaussian")

pbckdenxcutnorm(x, kerncentres, lambda, kernel = "gaussian")

bckdenxrenorm(x, kerncentres, lambda, kernel = "gaussian")

pbckdenxrenorm(x, kerncentres, lambda, kernel = "gaussian")

bckdenxreflect(x, kerncentres, lambda, kernel = "gaussian")

pbckdenxreflect(x, kerncentres, lambda, kernel = "gaussian")

pxb(x, lambda)

bckdenxbeta1(x, kerncentres, lambda, xmax)

pbckdenxbeta1(x, kerncentres, lambda, xmax)

bckdenxbeta2(x, kerncentres, lambda, xmax)

pbckdenxbeta2(x, kerncentres, lambda, xmax)

bckdenxgamma1(x, kerncentres, lambda)

pbckdenxgamma1(x, kerncentres, lambda)

bckdenxgamma2(x, kerncentres, lambda)

pbckdenxgamma2(x, kerncentres, lambda)

bckdenxcopula(x, kerncentres, lambda, xmax)

pbckdenxcopula(x, kerncentres, lambda, xmax)

pbckdenxlog(x, kerncentres, lambda, offset, kernel = "gaussian")

pbckdenxnn(x, kerncentres, lambda, kernel = "gaussian", nn)

qmix(x, u, epsilon)

qmixprime(x, u, epsilon)

qgbgmix(x, ul, ur, epsilon)

qgbgmixprime(x, ul, ur, epsilon)

pscounts(x, beta, design.knots, degree)
}
\arguments{
\item{x}{quantiles}

\item{kerncentres}{kernel centres (typically sample data vector or scalar)}

\item{lambda}{bandwidth for kernel (as half-width of kernel) or \code{NULL}}

\item{kernel}{kernel name (\code{default = "gaussian"})}

\item{xmax}{upper bound on support (copula and beta kernels only) or \code{NULL}}

\item{offset}{offset added to kernel centres (logtrans only) or \code{NULL}}

\item{nn}{non-negativity correction method (simple boundary correction only)}

\item{u}{threshold}

\item{epsilon}{interval half-width}

\item{ul}{lower tail threshold}

\item{ur}{upper tail threshold}

\item{beta}{vector of B-spline coefficients (required)}

\item{design.knots}{spline knots for splineDesign function}

\item{degree}{degree of B-splines (0 is constant, 1 is linear, etc.)}
}
\description{
Internal functions not designed to be used directly, but are all exported
to make them visible to users.
}
\details{
Internal functions not designed to be used directly. No error
checking of the inputs is carried out, so user must be know what they are doing.
They are undocumented, but are made visible to the user.

Mostly, these are used in the kernel density estimation functions.
}
\section{Acknowledgments}{
 Based on code
by Anna MacDonald produced for MATLAB.
}

\seealso{
\code{\link[stats:density]{density}}, \code{\link[evmix:kden]{kden}}
and \code{\link[evmix:bckden]{bckden}}.
}
\author{
Yang Hu and Carl Scarrott \email{carl.scarrott@canterbury.ac.nz}.
}
